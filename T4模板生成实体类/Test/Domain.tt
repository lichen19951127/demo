<#@ template debug="true" hostSpecific="true" #>
<#@ output extension=".cs" #>
<#@ Assembly Name="System.Core" #>
<#@ Assembly Name="System.Windows.Forms" #>
<#@ import namespace="System.Diagnostics" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Collections" #>
<#@ import namespace="System.Collections.Generic" #> 
<#@ import namespace="System.Data" #>
<#@ import namespace="System.Data.SqlClient" #>
<#@ assembly name="System.Data" #>
<#@ assembly name="System.Xml" #>
<#@ assembly name="System.Web" #>
<#@ assembly name="System.Configuration" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Web.Configuration" #>
<#@ import namespace="System.Configuration" #> 
<# 
	var connectionString="Data Source=119.23.32.84;Initial Catalog=yiliaojigou;User=test;Password=123456";
    SqlConnection conn = new SqlConnection(connectionString); 
    conn.Open(); 
    System.Data.DataTable schema = conn.GetSchema("TABLES"); 
    string selectQuery = "select * from @tableName"; 
    SqlCommand command = new SqlCommand(selectQuery,conn); 
    SqlDataAdapter ad = new SqlDataAdapter(command); 
    System.Data.DataSet ds = new DataSet();
	string propQuery="SELECT 表名=sobj.name,字段名=scol.name,字段说明=sprop.[value],允许为空=scol.isnullable,CASE WHEN EXISTS(SELECT 1 FROM dbo.sysindexes si INNER JOIN dbo.sysindexkeys sik ON si.id = sik.id AND si.indid = sik.indid INNER JOIN dbo.syscolumns sc ON sc.id = sik.id AND sc.colid = sik.colid INNER JOIN dbo.sysobjects so ON so.name = si.name AND so.xtype = 'PK' WHERE sc.id = scol.id AND sc.colid = scol.colid ) THEN '1' ELSE '' END AS 主键  FROM syscolumns as scol inner join sys.sysobjects as sobj on scol.id=sobj.id and sobj.xtype='U' and sobj.name<>'dtproperties' left join sys.extended_properties as sprop on scol.id=sprop.major_id and scol.colid=sprop.minor_id where sobj.name='@tableName' and scol.name='@columnName'";
    SqlCommand command2 = new SqlCommand(propQuery,conn); 
    SqlDataAdapter ad2 = new SqlDataAdapter(command2); 
    System.Data.DataSet ds2 = new DataSet();
#>
//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by T4 Template.
//     DO NOT MODIFY contents of this file. Changes to this
//     file will be lost if the code is regenerated.
//     Author:WenJun Yang
// </autogenerated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations.Schema;
using System.Text;
using OpenAuth.Repository.Core;

namespace OpenAuth.Repository.Domains 
{
	#region 数据表实体类
<# foreach(System.Data.DataRow row in schema.Rows) 
    { 
		string tableName=row["TABLE_NAME"].ToString();
		if(tableName.ToLower()=="user")
        {
			tableName="["+row["TABLE_NAME"].ToString()+"]";
		}
	 #>   
	/// <summary>
	/// 数据表<#= row["TABLE_NAME"].ToString() #> 实体类：<#= row["TABLE_NAME"].ToString() #>
	/// </summary>
	[Table("<#= row["TABLE_NAME"].ToString() #>")]
	public partial class <#= row["TABLE_NAME"].ToString() #>
	{   <# ds.Tables.Clear();
		command.CommandText = selectQuery.Replace("@tableName",tableName); 			
		ad.FillSchema(ds, SchemaType.Mapped, row["TABLE_NAME"].ToString());			
		foreach (DataColumn dc in ds.Tables[0].Columns)
		{#>
			<# 
			ds2.Tables.Clear();
			command2.CommandText = propQuery.Replace("@tableName",row["TABLE_NAME"].ToString()); 
			command2.CommandText = command2.CommandText.Replace("@columnName",dc.ColumnName); 
			ad2.Fill(ds2);		
			string nullable="";
			//可空类型
			if("DateTime,Decimal,Guid,Int16,Int32,Int64,Double,Float,Boolean".Contains(dc.DataType.Name))
            {
				if(ds2.Tables[0].Rows[0].ItemArray[3].ToString()=="1")
				nullable="?";
			}
            #> 
		/// <summary>
		/// <#=ds2.Tables[0].Rows[0].ItemArray[2]#>
		/// </summary>
		[Description("<#= ds2.Tables[0].Rows[0].ItemArray[2] #>")]              		
		public <#= dc.DataType.Name #><#= nullable #> <#= dc.ColumnName #> {get;set;}   
	<# }  #>   
	}  

	<# 
    } #> 
	#endregion	
}
 